plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0' apply false
    id "com.jfrog.artifactory" version "4.9.8"
    id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '4.0.1'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
    id 'edu.wpi.first.WpilibTools' version '0.2.3'
}

if (project.hasProperty('buildServer')) {
    wpilibVersioning.buildServerMode = true
}

if (project.hasProperty('releaseMode')) {
    wpilibVersioning.releaseMode = true
}

allprojects {
    repositories {
        mavenCentral()
    }
    if (project.hasProperty('releaseMode')) {
        wpilibRepositories.addAllReleaseRepositories(it)
    } else {
        wpilibRepositories.addAllDevelopmentRepositories(it)
    }
}

wpilibVersioning.version.finalizeValue()
version = wpilibVersioning.version.get()


allprojects {
    apply plugin: 'java'
    apply plugin: 'edu.wpi.first.WpilibTools'

    wpilibTools.createNativeConfigurations()

    wpilibTools.deps.javafx(dependencies, "base")
    wpilibTools.deps.javafx(dependencies, "controls")
    wpilibTools.deps.javafx(dependencies, "fxml")
    wpilibTools.deps.javafx(dependencies, "graphics")

    dependencies {
        def junitJupiter = { name ->
            create group: 'org.junit.jupiter', name: name, version: '5.6.1'
        }

        def testFxVersion = { name, version ->
            create group: 'org.testfx', name: name, version: version
        }

        def testFx = { name ->
            create group: 'org.testfx', name: name, version: '4.0.16-alpha'
        }
        compileOnly create(group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1')
        testImplementation junitJupiter("junit-jupiter-api")
        testImplementation junitJupiter("junit-jupiter-engine")
        testImplementation junitJupiter("junit-jupiter-params")

        testImplementation group: "org.junit-pioneer", name: "junit-pioneer", version: "0.3.0"
        testRuntimeOnly group: "org.junit.platform", name: "junit-platform-launcher", version: "1.0.0"

        testImplementation testFx("testfx-core")
        testImplementation testFx("testfx-junit5")
        testRuntimeOnly testFxVersion("openjfx-monocle", "jdk-9+181")

    }

    tasks.withType(JavaCompile) {
        // UTF-8 characters are used in menus
        options.encoding = "UTF-8"
    }

    tasks.withType(Test) {
        // TODO: re-enable when TestFX (or the underlying JavaFX problem) is fixed
        println("UI tests will not be run due to TestFX being broken when headless on Java 10.")
        println("See: https://github.com/javafxports/openjdk-jfx/issues/66")
        // Link: https://github.com/javafxports/openjdk-jfx/issues/66
        useJUnitPlatform {
            excludeTags("UI")
        }
    }

    tasks.withType(Javadoc) {
        failOnError = false
    }
}

wrapper {
    gradleVersion = '6.0.1'
}
